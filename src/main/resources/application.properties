mybatis.type-aliases-package=com.neo.entity
#服务名
spring.application.name=microservice-jiayibilin-mySql
#服务启动的端口
server.port=2001
#注册到的服务中心的URL
eureka.client.serviceUrl.defaultZone=http://XieJie:XieJie@125.216.243.177:1001/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:1001/eureka/
#eureka.client.serviceUrl.defaultZone=http://peer1:1001/eureka/,http://peer2:1002/eureka/
#自动生成日志文件
logging.file=${spring.application.name}.log
#表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
eureka.instance.lease-expiration-duration-in-seconds=30
#客户端每隔多少秒发送心跳给服务端,表明客户端还活着
eureka.instance.lease-renewal-interval-in-seconds=10
#将instance-id设置为IP:端口的形式
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
#注册到eureka server上IP地址
eureka.instance.prefer-ip-address=true
#-------------------------------------------------------------------------------------

#数据库设置  
#数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#数据库驱动器
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#数据库连接
spring.datasource.url=jdbc:mysql://localhost:3306/xinyijia?useUnicode=true&characterEncoding=utf-8
#登陆数据库的用户
spring.datasource.username=root
#登陆数据库密码
spring.datasource.password=${password}

#-----------------------------------------------------------------------------------

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大  
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间  
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒   
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒   
spring.datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.validationQuery=SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉
spring.datasource.poolPreparedStatements=true
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true，
#单个connnection独享一个statement cache，也就是maxOpenPreparedStatements
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，属性类型是字符串，通过别名的方式配置扩展插件，
#常用的插件有： 监控统计用的filter:stat  日志用的filter:log4j 防御sql注入的filter:wall 密码加密config
spring.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录  ;解密功能
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=true;config.decrypt.key=${publicKey}
# 合并多个DruidDataSource的监控数据  
#spring.datasource.useGlobalDataSourceStat=true  
#数据库密码加密
#java –cp druid-1.0.29.jar com.alibaba.druid.filter.config.ConfigTools 你的密码
privateKey:MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAoev9rmdIyfQrShmSpLZW0vsMZHy8zsJctomNokdDW2X5n/NVUsOJlNGPcKOzf5n7tvBgPOq8zRJksko0/zo4CwIDAQABAkBZDRvQbfdHMmUYdKYEtk9b6zvui/ee0qAAt/fQFtdBjRzVGfDHfqOHkxGiS47d3Y1b8TO3blzLoAjxQpFAw56hAiEAz81S5lQCQgFqsNsy42l5yj5oLArpshtZbHbfpIHtWrECIQDHem9a8sxd2u9sUGisDUI6OZAyX2AGCsbHvYhkTTk1ewIhAJz3G4egLZRuPYkaCnZ9VeHPAiFCnQRMZF/p60T4X7IBAiEAmHSStsfqObEiW335AcYAX8+uzVDnarbBxdatbzs2BhECIHHaQ/UmNrm/Y3cWFpjZ5fi1g4J6AdEiwCK6chQhOG3K
publicKey:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKHr/a5nSMn0K0oZkqS2VtL7DGR8vM7CXLaJjaJHQ1tl+Z/zVVLDiZTRj3Cjs3+Z+7bwYDzqvM0SZLJKNP86OAsCAwEAAQ==
password:RxxP2jCmExLhGDUW+ddRi9JkJyvPjD6qlHSjJy8ingCv2RVyXuAyYu5RgN618Znm9gdMczh+7+7Gq3YADZESYQ==

#-----------------------------------------------------------------------------

#redis配置
#redis数据库名称  从0到15,默认为db0
#spring.redis.database=0
#redis服务器名称
spring.redis.host=127.0.0.1
#redis服务器密码
#spring.redis.password=
#redis服务器连接端口号
spring.redis.port=6379
#redis连接池设置
#最大空闲链接数
spring.redis.pool.max-idle=8
#最小空闲连接数
spring.redis.pool.min-idle=0
#连接池最大连接数，负数表示无最大连接数
spring.redis.pool.max-active=8
#连接池最大阻塞等待时间，负数表示没有
spring.redis.pool.max-wait=-1
#主节点
#spring.redis.sentinel.master=
#spring.redis.sentinel.nodes=
# 连接超时时间（毫秒）  
spring.redis.timeout=60000

#---------------------------------------------------------------------------------
